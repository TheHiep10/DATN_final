// Generated by view binder compiler. Do not edit!
package com.example.afinal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.afinal.R;
import com.example.afinal.custom_textView.RobotoBlackTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RobotoBlackTextView headerInfoMember;

  @NonNull
  public final TextView infoaddress;

  @NonNull
  public final TextView infodate;

  @NonNull
  public final TextView infogender;

  @NonNull
  public final TextView infoname;

  @NonNull
  public final TextView infophone;

  @NonNull
  public final TextView infostarttime;

  @NonNull
  public final TextView textinfoaddress;

  @NonNull
  public final TextView textinfodate;

  @NonNull
  public final TextView textinfogender;

  @NonNull
  public final TextView textinfoname;

  @NonNull
  public final TextView textinfophone;

  @NonNull
  public final TextView textinfostarttime;

  private ActivityDetailBinding(@NonNull LinearLayout rootView,
      @NonNull RobotoBlackTextView headerInfoMember, @NonNull TextView infoaddress,
      @NonNull TextView infodate, @NonNull TextView infogender, @NonNull TextView infoname,
      @NonNull TextView infophone, @NonNull TextView infostarttime,
      @NonNull TextView textinfoaddress, @NonNull TextView textinfodate,
      @NonNull TextView textinfogender, @NonNull TextView textinfoname,
      @NonNull TextView textinfophone, @NonNull TextView textinfostarttime) {
    this.rootView = rootView;
    this.headerInfoMember = headerInfoMember;
    this.infoaddress = infoaddress;
    this.infodate = infodate;
    this.infogender = infogender;
    this.infoname = infoname;
    this.infophone = infophone;
    this.infostarttime = infostarttime;
    this.textinfoaddress = textinfoaddress;
    this.textinfodate = textinfodate;
    this.textinfogender = textinfogender;
    this.textinfoname = textinfoname;
    this.textinfophone = textinfophone;
    this.textinfostarttime = textinfostarttime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.header_info_member;
      RobotoBlackTextView headerInfoMember = ViewBindings.findChildViewById(rootView, id);
      if (headerInfoMember == null) {
        break missingId;
      }

      id = R.id.infoaddress;
      TextView infoaddress = ViewBindings.findChildViewById(rootView, id);
      if (infoaddress == null) {
        break missingId;
      }

      id = R.id.infodate;
      TextView infodate = ViewBindings.findChildViewById(rootView, id);
      if (infodate == null) {
        break missingId;
      }

      id = R.id.infogender;
      TextView infogender = ViewBindings.findChildViewById(rootView, id);
      if (infogender == null) {
        break missingId;
      }

      id = R.id.infoname;
      TextView infoname = ViewBindings.findChildViewById(rootView, id);
      if (infoname == null) {
        break missingId;
      }

      id = R.id.infophone;
      TextView infophone = ViewBindings.findChildViewById(rootView, id);
      if (infophone == null) {
        break missingId;
      }

      id = R.id.infostarttime;
      TextView infostarttime = ViewBindings.findChildViewById(rootView, id);
      if (infostarttime == null) {
        break missingId;
      }

      id = R.id.textinfoaddress;
      TextView textinfoaddress = ViewBindings.findChildViewById(rootView, id);
      if (textinfoaddress == null) {
        break missingId;
      }

      id = R.id.textinfodate;
      TextView textinfodate = ViewBindings.findChildViewById(rootView, id);
      if (textinfodate == null) {
        break missingId;
      }

      id = R.id.textinfogender;
      TextView textinfogender = ViewBindings.findChildViewById(rootView, id);
      if (textinfogender == null) {
        break missingId;
      }

      id = R.id.textinfoname;
      TextView textinfoname = ViewBindings.findChildViewById(rootView, id);
      if (textinfoname == null) {
        break missingId;
      }

      id = R.id.textinfophone;
      TextView textinfophone = ViewBindings.findChildViewById(rootView, id);
      if (textinfophone == null) {
        break missingId;
      }

      id = R.id.textinfostarttime;
      TextView textinfostarttime = ViewBindings.findChildViewById(rootView, id);
      if (textinfostarttime == null) {
        break missingId;
      }

      return new ActivityDetailBinding((LinearLayout) rootView, headerInfoMember, infoaddress,
          infodate, infogender, infoname, infophone, infostarttime, textinfoaddress, textinfodate,
          textinfogender, textinfoname, textinfophone, textinfostarttime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
