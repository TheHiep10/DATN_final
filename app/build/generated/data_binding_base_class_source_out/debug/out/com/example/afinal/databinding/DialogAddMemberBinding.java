// Generated by view binder compiler. Do not edit!
package com.example.afinal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.afinal.R;
import com.example.afinal.custom_textView.RobotoBlackTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogAddMemberBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnAccept;

  @NonNull
  public final RobotoBlackTextView headerAddMember;

  @NonNull
  public final RadioButton nam;

  @NonNull
  public final RadioButton nu;

  @NonNull
  public final RadioGroup radiosex;

  @NonNull
  public final TextView textaddress;

  @NonNull
  public final TextView textdate;

  @NonNull
  public final TextView textdatestart;

  @NonNull
  public final TextView textname;

  @NonNull
  public final TextView textnumber;

  @NonNull
  public final EditText txtaddress;

  @NonNull
  public final EditText txtdate;

  @NonNull
  public final EditText txtdatestart;

  @NonNull
  public final EditText txtname;

  @NonNull
  public final EditText txtnumber;

  private DialogAddMemberBinding(@NonNull LinearLayout rootView, @NonNull Button btnAccept,
      @NonNull RobotoBlackTextView headerAddMember, @NonNull RadioButton nam,
      @NonNull RadioButton nu, @NonNull RadioGroup radiosex, @NonNull TextView textaddress,
      @NonNull TextView textdate, @NonNull TextView textdatestart, @NonNull TextView textname,
      @NonNull TextView textnumber, @NonNull EditText txtaddress, @NonNull EditText txtdate,
      @NonNull EditText txtdatestart, @NonNull EditText txtname, @NonNull EditText txtnumber) {
    this.rootView = rootView;
    this.btnAccept = btnAccept;
    this.headerAddMember = headerAddMember;
    this.nam = nam;
    this.nu = nu;
    this.radiosex = radiosex;
    this.textaddress = textaddress;
    this.textdate = textdate;
    this.textdatestart = textdatestart;
    this.textname = textname;
    this.textnumber = textnumber;
    this.txtaddress = txtaddress;
    this.txtdate = txtdate;
    this.txtdatestart = txtdatestart;
    this.txtname = txtname;
    this.txtnumber = txtnumber;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogAddMemberBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogAddMemberBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_add_member, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogAddMemberBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_accept;
      Button btnAccept = ViewBindings.findChildViewById(rootView, id);
      if (btnAccept == null) {
        break missingId;
      }

      id = R.id.header_add_member;
      RobotoBlackTextView headerAddMember = ViewBindings.findChildViewById(rootView, id);
      if (headerAddMember == null) {
        break missingId;
      }

      id = R.id.nam;
      RadioButton nam = ViewBindings.findChildViewById(rootView, id);
      if (nam == null) {
        break missingId;
      }

      id = R.id.nu;
      RadioButton nu = ViewBindings.findChildViewById(rootView, id);
      if (nu == null) {
        break missingId;
      }

      id = R.id.radiosex;
      RadioGroup radiosex = ViewBindings.findChildViewById(rootView, id);
      if (radiosex == null) {
        break missingId;
      }

      id = R.id.textaddress;
      TextView textaddress = ViewBindings.findChildViewById(rootView, id);
      if (textaddress == null) {
        break missingId;
      }

      id = R.id.textdate;
      TextView textdate = ViewBindings.findChildViewById(rootView, id);
      if (textdate == null) {
        break missingId;
      }

      id = R.id.textdatestart;
      TextView textdatestart = ViewBindings.findChildViewById(rootView, id);
      if (textdatestart == null) {
        break missingId;
      }

      id = R.id.textname;
      TextView textname = ViewBindings.findChildViewById(rootView, id);
      if (textname == null) {
        break missingId;
      }

      id = R.id.textnumber;
      TextView textnumber = ViewBindings.findChildViewById(rootView, id);
      if (textnumber == null) {
        break missingId;
      }

      id = R.id.txtaddress;
      EditText txtaddress = ViewBindings.findChildViewById(rootView, id);
      if (txtaddress == null) {
        break missingId;
      }

      id = R.id.txtdate;
      EditText txtdate = ViewBindings.findChildViewById(rootView, id);
      if (txtdate == null) {
        break missingId;
      }

      id = R.id.txtdatestart;
      EditText txtdatestart = ViewBindings.findChildViewById(rootView, id);
      if (txtdatestart == null) {
        break missingId;
      }

      id = R.id.txtname;
      EditText txtname = ViewBindings.findChildViewById(rootView, id);
      if (txtname == null) {
        break missingId;
      }

      id = R.id.txtnumber;
      EditText txtnumber = ViewBindings.findChildViewById(rootView, id);
      if (txtnumber == null) {
        break missingId;
      }

      return new DialogAddMemberBinding((LinearLayout) rootView, btnAccept, headerAddMember, nam,
          nu, radiosex, textaddress, textdate, textdatestart, textname, textnumber, txtaddress,
          txtdate, txtdatestart, txtname, txtnumber);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
